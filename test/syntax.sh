#!/bin/bash
GREEN="\033[0;32m"
RED="\033[0;31m"
YELLOW="\033[0;33m"
NC="\033[0m" # No Color
run_command() {
         valgrind -q --leak-check=full --error-exitcode=1 ./minishell "$1"
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Valgrind: OK${NC}"
    else
        echo -e "${RED}Valgrind: KO${NC}"
    fi
    echo -e "${GREEN}--------------------------------------------------------------------${NC}"
}
run_error() {
    echo -e "\n\n${YELLOW}========================= ERROR SYNTAX ===========================${NC}\n\n"
    
    run_command "echo \"EE"
    run_command "echo \"Double quote: \"\""
    run_command "echo \"Done'\" '"
    run_command "echo \"a\"sf\"g\"h\""
    run_command "echo \"Double' quote: '"
    run_command "echo 'Single quote: \''"
    run_command "echo 'Done\"' \""
    run_command "echo a's'f'f'g'h"
    run_command "l''s\""
    run_command "try '\"this\""
    run_command "echo 'Single quote: ''"
    run_command "echo \"Done'\" '"
    run_command "cat eval.h | cat | |cat | ls"
    run_command "cat < <"
    run_command "ls out.txt >"
    run_command "echo bonjour > > out"
    run_command "ls out.txt >>"
    run_command "echo bonjour  >>>  test"
    run_command ">> ./file/out cat > && < ./file/in"
    run_command "echo \$((3+ 5))"
    run_command "echo hello && && echo hi"
    run_command "echo hello &&& echo hi"
    run_command "echo hello & (echo done)"
    run_command "ls | | wc -l "
    run_command "cat XXX ||| echo ok || echo  done"
    run_command "cat < in.txt <"
    run_command "cat < < in.txt"
    run_command "ls >>> in.txt"
    run_command "| ls | wc -l > > out.txt"
    run_command " cat >> | cat"
    run_command "echo hello & (echo done)"
    run_command "echo '&' & rm file"
    run_command "> out1.txt echo >>>>> out.txt < in.txt"
    run_command "echo \"  \"  \" \"great day\" "
    run_command "() && echo done ()"
    run_command "() && (                   )"
    run_command "( echo hello ) && (( echo hi  )  "
    run_command ") ) echo hello ( ( || cat"
    run_command "()"
    run_command "(echo 5) 6"
    run_command "echo hello && (echo hi && (echo hello (echo good) && echo day))"
    run_command "echo hello && (echo hi && (echo (good) && echo day))"
    run_command "(echo nice && ((ls))) && echo hi"
    run_command "((echo nice && (ls))) && echo hi"
    run_command "ls && (ls && (ls && (ls && (ls && (ls && ((ls))))))) && ls"
    run_command "ls && (ls && (ls && (ls && ((ls && (ls && (ls))))))) && ls"
    run_command "((echo hello))"
    run_command "echo hello && (echo (nice)) && echo hi"
    run_command "echo hello && () && echo hi"
    run_command "echo hello && (echo nice (ls)) && echo hi"
    run_command "echo hello && ((echo nice && (ls))) && echo hi"
    run_command "(echo hi) || echo hi && (echo (hello))"
    run_command "(echo hi) (echo hello)"
    run_command "echo hello ( \")\""
    run_command "echo (hello)"
    run_command "<<  EOF >> ./file/out (cat)  "
    run_command "touch file.txt ||  | echo \"Failed to create file\""
    run_command "touch file.txt &&& echo \"Failed to create file\""
    run_command "touch file.txt &&"
    run_command "touch & file.txt"
    run_command "&& touch file.txt"
    run_command "|| out1.txt cat > out.txt < in.txt"
    run_command "(>> .out1.txt cat &&) cat < in.txt"
    run_command ">> out1.txt cat (&& cat < in.txt)"
    run_command "l''s'"
    run_command "<< EOF (cat | tr a-z A-Z) > ./file/out1 > ./file/out2"

    
}
run_ok() {
    echo -e "\n\n${YELLOW}========================= OK SYNTAX ===========================${NC}\n\n"

    run_command "echo"
    run_command "echo -n"
    run_command "echo -n hi"
    run_command "echo -n      \"Hi\""
    run_command "echo   -n   \"Hello \$USER\" ', nice day;)'"
    run_command "echo 'Hi \$\$'"
    run_command "echo '[Hello \"World\"]'"
    run_command "   echo  \"[Hello 'World'']\""
    run_command "echo \"Hello \$USER lol \" -n \"\$SHELL\""
    run_command "echo hello        world ls echo"
    run_command "echo \"Hello               world ls\" go"
    run_command "echo -nnnn Hello World"
    run_command "echo -n -n -nnnn -nnnnm"
    run_command "echo hi\";\" hihi"
    run_command "echo \"Hello\"     \"World\""
    run_command "echo \"Hello\"\"World\""
    run_command "echo \"Hello      World\""
    run_command "echo is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
    run_command "exit start of shell"
    run_command "exit after correct cmd"
    run_command "exit after wrong cmd"
    run_command "exit -n"
    run_command "exit ./"
    run_command "exit 0"
    run_command "exit 1"
    run_command "exit 125"
    run_command "exit +1"
    run_command "exit -12456"
    run_command "exit test last"
    run_command "exit x 1"
    run_command "exit 0 hello"
    run_command "exit 55 70"
    run_command "cd"
    run_command "unset HOME && cd"
    run_command "cd ."
    run_command "cd ."
    run_command "cd \"../../\""
    run_command "cd /"
    run_command "cd directory"
    run_command "cd ./subdir"
    run_command "cd /home"
    run_command "cd /usr/bin"
    run_command "cd /usr/bin ./home"
    run_command "cd ~"
    run_command "cd -"
    run_command "cd invalid_path"
    run_command "pwd"
    run_command "pwd a b c d"
    run_command "env"
    run_command "env env"
    run_command "env a b c"
    run_command "export"
    run_command "export TEST=test"
    run_command "export TEST='[check]'"
    run_command "export TEST=\"['TEST']\""
    run_command "export TEST=\"['test' \$SHELL]\""
    run_command "export VAR=\"Hello\""
    run_command "export VAR=yoyo TEST=dada"
    run_command "export TEST=test user"
    run_command "export \"test=ici\"=coucou"
    run_command "export _A55=Rolling+"
    run_command "export word="
    run_command "export TEST"
    run_command "export \"\" NEW=t unset \"\""
    run_command "export =Yoyo"
    run_command "export \$DD"
    run_command "export VAR = \"Hello\""
    run_command "unset VAR=Hello"
    run_command "unset VAR"
    run_command "unset HELLO="
    run_command "unset VAR TEST"
    run_command "echo \"[Path \$SHELL  '  ' && !]\""
    run_command "echo \"[Path \$SHELL\$]\""
    run_command "echo \"[Test \'still\' valid \$USER]\""
    run_command "echo \"Path: /usr/local/bin\""
    run_command "echo \"It's a beautiful day\""
    run_command "echo \"Exit status: \$?\""
    run_command "echo \"a\"s\"f\"g\"h\""
    run_command "echo '[Path \$SHELL \"  \" && !]'"
    run_command "echo '\$USER'"
    run_command "echo 'Hello World'"
    run_command "echo 'Exit status: \$?'"
    run_command "echo 'a's'f'f'g'h"
    run_command "hello"
    run_command "echo 'Done'\" \";"
    run_command "echo \$USER"
    run_command "echo \$"
    run_command "echo \"\$USER\""
    run_command "echo \$USER"
    run_command "echo \$HOME\$"
    run_command "echo \$PATH"
    run_command "echo \$SHELL"
    run_command "echo \$PWD"
    run_command "echo \$~"
    run_command "echo \"\$\""
    run_command "echo \"\$aa\""
    run_command "echo \$SHELL\$HOME"
    run_command "echo bonjour > \$TEST.txt"
    run_command "echo '\"\$USER\"'  \"'\$USER'\""
    run_command "echo \"[Path \$SHELL  ' \$SHELL ' && XX]\""
    run_command "echo '\$USER'"
    run_command "echo Hi \"there\$USER next\""
    run_command "echo Hi \"there\$USERnext\""
    run_command "echo Hi \"there\$USER\$?next\""
    run_command "echo there\$USER\$!loo"
    run_command "echo there\$USER\$HANTUloo"
    run_command "echo Hi \"there\$USER\$^next\""
    run_command "echo Exit is \$?"
    run_command "echo  User\$USER@42kl"
    run_command "echo \"\$12345\""
    run_command "echo  \$\$!lo\$a:User"
    run_command "echo \"##\$500\""
    run_command "echo \$USER\$!lo\$SWAP_VAR:User\$abc"
    run_command "echo \"\$?Exit is \$?\$?### and \$?|\$? \$?\""
    run_command "/usr/bin/ls"
    run_command "/bin/ls"
    run_command "ls"
    run_command "/usr/bin/ls -l"
    run_command "ls -l"
    run_command "wc -c"
    run_command "[space] \t"
    run_command "dsbksdgbksdghsd"
    run_command "Hello 'World'"
    run_command "cat"
    run_command "ls"
    run_command "wc"
    run_command "/usr/bin/ls"
    run_command "cat"
    run_command "echo \"Hello there\" | grep \"e\""
    run_command "cat ./file/in.txt | wc -l"
    run_command "cat in.txt | wc -l"
    run_command "echo \"Hello World\" | tr 'a-z' 'A-Z'"
    run_command "ps aux | grep \"bash\""
    run_command "cat ./file/in.txt | cat | cat | ls"
    run_command "<< EOF | cat"
    run_command "cat | cat | cat | ls"
    run_command "< ./file/in"
    run_command "cat < ./file/in"
    run_command "< ./file/in cat"
    run_command "cat < ./file/in < ./file/in1"
    run_command "./file/in < ./file/in1 cat"
    run_command "cat < ./file/in  < nonexist < ./file/in1"
    run_command "< ./file/in1 cat  < ./file/in"
    run_command "<< EOF"
    run_command "cat << EOF"
    run_command "<< EOF cat"
    run_command "cat << EOF < ./file/in"
    run_command "< ./file/in << EOF cat"
    run_command "< nonexist << EOF cat"
    run_command "cat << Hello << EOF < ./file/in"
    run_command "cat << Hello < ./file/in << EOF "
    run_command "<< Hello << EOF cat"
    run_command "> ./file/out"
    run_command "ls > ./file/out"
    run_command "echo \"Hello World\" > ./file/out"
    run_command "echo bonjour > ./file/test_remove_later"
    run_command "> ./file/out ls"
    run_command "> ./file/out echo Hello > ./file/out1 there "
    run_command "> ./file/out | ls"
    run_command ">> ./file/out"
    run_command "ls >> ./file/out"
    run_command ">> ./file/out ls"
    run_command ">>  ./file/out >>  ./file/out1  >  ./file/out2"
    run_command "ls  >>  ./file/out >  ./file/out1  >>  ./file/out2"
    run_command "echo bonjour  h>>  ./file/test_remove_later"
    run_command "echo bonjour  h  >>./file/out"
    run_command "cat << EOF > ./file/out"
    run_command "< nonexit.txt ls | wc -c > ./file/out"
    run_command "ls -l <./file/in| wc -c > ./file/out"
    run_command "< /dev/stdin cat | head -1 > ./file/out"
    run_command "cat << EOF | wc -l > ./file/out"
    run_command "<< EOF cat | wc -l > ./file/out"
    run_command "cat ./file/in << EOF > ./file/out >> ./file/out2"
    run_command "> ./file/out cat > ./file/out1 < ./file/in"
    run_command "echo 2 >> ./file/out > ./file/out1"
    run_command "echo 2 > ./file/out >> ./file/out1"
    run_command "cat > ./file/out | wc -l < ./file/in"
    run_command "> ./file/out cat < ./file/in | wc -l"
    run_command "> ./file/out echo \">>>>> out.txt\" < ./file/in"
    run_command "echo Done | cat << EOF"
    run_command "echo Hell && echo Hi && << DONE cat "
    run_command "cat ./dump/fds && echo Hi && << DONE cat"
    run_command "cat << EOF < ./file/in && echo Hi && << DONE cat"
    run_command "echo \"hi\"; echo hello"
    run_command "echo -la\$SHELL"
    run_command "echo \"-laa\" test"
    run_command "cd ~"
    run_command " ls -l | (grep ic)"
    run_command "Echo"
    run_command "cat /dev/random | head -n 1 | cat -e"
    run_command "< /dev/random cat  | head -n 1 | cat -e"
    run_command "./a.out"
    run_command "./minishell"
    run_command "echo \$\$\$\$#\$USER\$0"
    run_command ""
    run_command " "
    run_command "                                                                     "
    run_command "\$!!\$Holo"
    run_command "echo \"  \"   \"great day\" "
    run_command "cat ./file/in<<EOF>./file/out>>./file/out1"
    run_command "cat|cat|cat|cat>./file/out<./file/in>./file/err.txt"
    run_command "asdghjkbjkfldsbjak lfdsanko && dasghjgdshkf  "
    run_command "                                                                              ls"
    run_command "echo njkdsfajkdfshjkkl&&hdaskfkajdsfkfsdahjas"
    run_command "echo hello && (echo hi && (echo good && echo day))"
    run_command "(echo nice && (ls)) && echo hi"
    run_command " echo hello && (echo hi && (echo hello && echo good) && echo day)"
    run_command "echo hello && (echo) && echo hi"
    run_command "echo hello && (echo nice && ls) && echo hi"
    run_command "echo hello && (echo nice && (ls)) && echo hi "
    run_command "(echo hello)"
    run_command "(ls)"
    run_command "echo hello && (echo hi && (echo good && echo day))"
    run_command "ls && (ls && (ls && (ls && (ls && (ls && (ls)))))) && ls"
    run_command "(echo hi) || echo hi && (echo hello)"
    run_command "(ls) && echo hello"
    run_command "(echo hello) && ls"
    run_command "(echo 5) > out.txt"
    run_command "echo hello | (cat) "
    run_command "((echo hello) && (ls))"
    run_command "echo lo && (echo nice && (ls)) && ((echo hi) && (ls) && (ls)) && (ls && (ls && (ls)))"
    run_command "echo \$?"
    run_command "\$? + \$?"
    run_command "echo \$? + \$?"
    run_command "echo \"Hello\" && echo \$?"
    run_command "rm non_existent_file ||  echo \"Exit staus: \$?\" && echo \"Exit staus: \$?\""
    run_command "echo hello && ls"
    run_command "mkdir new_dir && cd new_dir"
    run_command "touch file.txt && echo \"Hello\" > out.txt"
    run_command "ls && echo \"Listed files\""
    run_command "grep \"ace\" ./file/in && echo \"Pattern found\""
    run_command "rm file.txt && echo \"File removed\""
    run_command "cat < nonexist && ls"
    run_command "cd ../../&& pwd"
    run_command "pwd && (mkdir new && cd new) && pwd && rmdir new"
    run_command "(echo \"World\" && (echo \"Hello\"))"
    run_command "(export a=10 && echo \$a) && echo \$a"
    run_command "pwd && (cd ../ && pwd) && pwd"
    run_command "ls -l && (echo hello && echo nice to meet you)"
    run_command "(ls -l && (echo hello && echo nice to meet you))"
    run_command "export TEST='Home\$USER' && echo \$TEST"
    run_command "env | grep SHLVL && (env | grep SHLVL)"
    run_command "cat || ls"
    run_command "cd random/hah || echo \"Invalid path\""
    run_command "grep \"@@\" ./file/in || echo \"Pattern not found\""
    run_command "rm file.txt || echo \"File not found\""
    run_command "touch file.txt || echo \"Failed to create file\""
    run_command "(echo hI && echo done) | tr a-z A-Z | wc -l"
    run_command "(echo Hi && echo there) | tr a-z A-Z"
    run_command "echo Hi && echo there | tr a-z A-Z"
    run_command "pwd || rm xx  && echo done1  || echo done2"
    run_command "mkdir new_dir || echo \"Directory exists\" && rmdir new_dir"
    run_command "export a=5 && echo shell=\$SHLVL && (echo a=\$a && export a=10 && echo a=\$a && echo shell=\$SHLVL) && echo a=\$a"
    run_command "export TEST=Yoyo && echo \$TEST | tr a-z A-Z"
    run_command "(>> ./file/out1 cat) && cat < ./file/in"
    run_command ">> ./file/out cat || (cat < ./file/in)"
    run_command "(cat)  <<  EOF >> ./file/out "
    run_command "(echo hi > ./file/out)  >> ./file/out1 >> ./file/out2 "
    run_command ">> out1.txt cat || << EOF cat < in.txt"
    run_command "find . -type f -name \"*.c\""
    run_command "echo \"d*mm*\""
    run_command "rm *.txt"
    run_command "ls *"
    run_command "echo *"
    run_command "echo Makef*"
    run_command "echo *a"
    run_command "echo * *"
    run_command "echo **"
    run_command "echo *.c"
    run_command "echo .*"
    run_command "cd /usr/*b/ && pwd"
    run_command "cd /usr/*b*4/ && pwd"
    run_command "cd /usr/*b*/ && pwd"
    run_command "export TEST=\"*\" && echo \$TEST"
    run_command "export *=no"
    run_command "echo XX*X*"
    run_command "env *"
    run_command "pwd *"
    run_command "exit *"
    run_command "< ./f*e/in cat"
    run_command "< d*m*txt"
    run_command "\$PATH"
    run_command "echo du*txt"
    run_command "echo du*m*txt"
    run_command "export VAR=\"ho *\" && ec\$VAR"
    run_command "export VAR=\"ho   space         la\" && ec\$VAR \"-Nice        day\""
    run_command "echo *logx"
    run_command "echo *txt"
    run_command "echo du*log"
    run_command "echo tex*"
    run_command "echo *um*"
    run_command "echo du*m*t"
    run_command "echo *du*m"
    run_command "echo *dsad*"
    run_command "echo \"cat lol.c | cat > lol.c\""
    run_command "ls | grep \"pattern\" > ./file/result"
    run_command "cat < ./file/in | wc -l"
    run_command "echo \"Hello\" > ./file/out && cat nonexist"
    run_command "echo \"Hello\" && echo \"World\" || echo \"Failed\""
    run_command "(ls && echo \"Listed\") || echo \"Failed\""
    run_command "< main.c < a.c cat && cat < main.c"
    run_command "echo hi || ls && echo world"
    run_command "echo hi || ls && danjasjdakj || echo world"
    run_command "echo hi || ls && echo success || echo world"
    run_command "< ./file/in ls -l | wc -l"
    run_command "< ./file/in cat | sort | uniq"
    run_command "< ./file/in ls | cat | cat | cat | cat | cat"
    run_command "cat ./file/in | cat | cat | cat > ./file/out < in2.txt > ./file/out1"
    run_command "cat ./file/in | cat | cat > ./file/out | cat >> ./file/out.1 > ./file/err.txt"
    run_command "export TRY=./file/test && cat ./file/in | cat  > \$TRY"
    run_command "< ./file/in echo > ./file/out there"
    run_command "mkdir new_dir && cd 'new_dir'"
    run_command "echo hi && exit 0"
    run_command "ls | exit"
    run_command "exit 0 | exit 1"
    run_command "exit 0 5 hello \"\$SHELL\""
    run_command "echo hi && exit 55 70"
    run_command "> ./file/in && echo done"
    run_command "l's'"
    run_command "e''c''h''o' 'h''i"
    run_command "export a=\"ho hi\" && ec\$a"
    run_command "e'\"c\"'h''o' 'h''i"
    run_command "export TRY=c && 'e'\"\$TRY\"'h''o' 'h''i'"
    run_command "export TRY=\$USER__ && echo \$TRY"
    run_command "export TRY='\$USER' && echo \$TRY"
    run_command "(cat | tr a-z A-Z) << EOF > ./file/out1 > ./file/out2"
    run_command "(echo hi) >> ./file/out1"
    run_command "(echo hi > ./file/out1) > ./file/out2"
}
# Run the tests
#run_error
run_ok